{"ast":null,"code":"class Api {\n  constructor({\n    address,\n    groupId,\n    token\n  }) {\n    this.token = token;\n    this.address = address;\n    this.groupId = groupId;\n  }\n  _useFetch(url, method, body) {\n    return fetch(url, {\n      headers: {\n        authorization: `Bearer ${this.token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      method,\n      body: JSON.stringify(body)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Error: ${res.status}`);\n    });\n  }\n  getUserInfo() {\n    return this._useFetch(\"localhost:3000/users/me\", `GET`).then(result => {\n      return result;\n    });\n  }\n  editUserInfo(name, about) {\n    return this._useFetch(\"localhost:3000/users/me\", `PATCH`, {\n      name: name,\n      about: about\n    }).then(result => {\n      return result;\n    });\n  }\n  getCards() {\n    return this._useFetch(\"localhost:3000/cards\", `GET`).then(result => {\n      return result;\n    });\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? \"PUT\" : \"DELETE\";\n    return this._useFetch(`localhost:3000/cards/likes/${cardId}`, method).then(result => {\n      return result;\n    });\n  }\n  deleteCard(cardId) {\n    return this._useFetch(`localhost:3000/cards/${cardId}`, `DELETE`).then(result => {\n      return result;\n    });\n  }\n  changeAvatarProfile(userAvatar) {\n    return this._useFetch(\"localhost:3000/users/me/avatar\", `PATCH`, userAvatar).then(result => {\n      return result;\n    });\n  }\n  addNewCard(name, link) {\n    return this._useFetch(\"localhost:3000/cards\", `POST`, {\n      name: name,\n      link: link\n    }).then(result => {\n      return result;\n    });\n  }\n}\nexport default Api;","map":{"version":3,"names":["Api","constructor","address","groupId","token","_useFetch","url","method","body","fetch","headers","authorization","JSON","stringify","then","res","ok","json","Promise","reject","status","getUserInfo","result","editUserInfo","name","about","getCards","changeLikeCardStatus","cardId","isLiked","deleteCard","changeAvatarProfile","userAvatar","addNewCard","link"],"sources":["C:/Users/shaye/react-around-api-full_es/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ address, groupId, token }) {\r\n    this.token = token; \r\n    this.address = address;\r\n    this.groupId = groupId;\r\n  }\r\n\r\n  _useFetch(url, method, body) {\r\n    return fetch(url, {\r\n      headers: {\r\n        authorization: `Bearer ${this.token}`, \r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method,\r\n      body: JSON.stringify(body),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Error: ${res.status}`);\r\n    });\r\n  }\r\n\r\n  getUserInfo() {\r\n    return this._useFetch(\r\n      \"localhost:3000/users/me\",\r\n      `GET`\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  editUserInfo(name, about) {\r\n    return this._useFetch(\r\n      \"localhost:3000/users/me\",\r\n      `PATCH`,\r\n      { name: name, about: about }\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  getCards() {\r\n    return this._useFetch(\r\n      \"localhost:3000/cards\",\r\n      `GET`\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    const method = isLiked ? \"PUT\" : \"DELETE\";\r\n    return this._useFetch(\r\n      `localhost:3000/cards/likes/${cardId}`,\r\n      method\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._useFetch(\r\n      `localhost:3000/cards/${cardId}`,\r\n      `DELETE`\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  changeAvatarProfile(userAvatar) {\r\n    return this._useFetch(\r\n      \"localhost:3000/users/me/avatar\",\r\n      `PATCH`,\r\n      userAvatar\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  addNewCard(name, link) {\r\n    return this._useFetch(\r\n      \"localhost:3000/cards\",\r\n      `POST`,\r\n      { name: name, link: link }\r\n    ).then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default Api;\r\n"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAAC;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,EAAE;IACvC,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EAEAE,SAASA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,OAAOC,KAAK,CAACH,GAAG,EAAE;MAChBI,OAAO,EAAE;QACPC,aAAa,EAAG,UAAS,IAAI,CAACP,KAAM,EAAC;QACrC,cAAc,EAAE;MAClB,CAAC;MACDG,MAAM;MACNC,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;MACf,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB;MACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAC/C,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAChB,SAAS,CACnB,yBAAyB,EACxB,KACH,CAAC,CAACS,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACxB,OAAO,IAAI,CAACpB,SAAS,CACnB,yBAAyB,EACxB,OAAM,EACP;MAAEmB,IAAI,EAAEA,IAAI;MAAEC,KAAK,EAAEA;IAAM,CAC7B,CAAC,CAACX,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAI,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACrB,SAAS,CACnB,sBAAsB,EACrB,KACH,CAAC,CAACS,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAK,oBAAoBA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACpC,MAAMtB,MAAM,GAAGsB,OAAO,GAAG,KAAK,GAAG,QAAQ;IACzC,OAAO,IAAI,CAACxB,SAAS,CAClB,8BAA6BuB,MAAO,EAAC,EACtCrB,MACF,CAAC,CAACO,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAQ,UAAUA,CAACF,MAAM,EAAE;IACjB,OAAO,IAAI,CAACvB,SAAS,CAClB,wBAAuBuB,MAAO,EAAC,EAC/B,QACH,CAAC,CAACd,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAS,mBAAmBA,CAACC,UAAU,EAAE;IAC9B,OAAO,IAAI,CAAC3B,SAAS,CACnB,gCAAgC,EAC/B,OAAM,EACP2B,UACF,CAAC,CAAClB,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEAW,UAAUA,CAACT,IAAI,EAAEU,IAAI,EAAE;IACrB,OAAO,IAAI,CAAC7B,SAAS,CACnB,sBAAsB,EACrB,MAAK,EACN;MAAEmB,IAAI,EAAEA,IAAI;MAAEU,IAAI,EAAEA;IAAK,CAC3B,CAAC,CAACpB,IAAI,CAAEQ,MAAM,IAAK;MACjB,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;AAEF;AAEA,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}