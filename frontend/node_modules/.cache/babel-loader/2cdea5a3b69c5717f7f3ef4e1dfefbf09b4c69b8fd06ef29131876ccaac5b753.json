{"ast":null,"code":"const BASE_URL = \"https://register.nomoreparties.co\";\nexport const registerUser = async (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    if (response.status === 201) {\n      return response.json();\n    }\n  }).then(res => {\n    return res;\n  });\n};\nexport const authorize = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data) {\n      localStorage.setItem(\"jwt\", data.token);\n      return data;\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const checkTokenValidity = async token => {\n  const response = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  } else {\n    throw new Error(\"Token inválido\");\n  }\n};","map":{"version":3,"names":["BASE_URL","registerUser","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","json","res","authorize","data","localStorage","setItem","token","err","console","error","checkTokenValidity","Authorization","ok","Error"],"sources":["C:/Users/shaye/react-around-api-full_es/frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"https://register.nomoreparties.co\";\r\n\r\nexport const registerUser = async (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => {\r\n      if (response.status === 201) {\r\n        return response.json();\r\n      }\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\nexport const authorize = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data) {\r\n      localStorage.setItem(\"jwt\", data.token);\r\n      return data;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const checkTokenValidity = async (token) => {\r\n  const response = await fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    return data;\r\n  } else {\r\n    throw new Error(\"Token inválido\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,mCAAmC;AAEpD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrD,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB;EACF,CAAC,CAAC,CACDH,IAAI,CAAEI,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOd,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMR,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;MACjDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMc,IAAI,GAAG,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;IAElC,IAAIG,IAAI,EAAE;MACRC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,IAAI,CAACG,KAAK,CAAC;MACvC,OAAOH,IAAI;IACb;EACF,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG,MAAOJ,KAAK,IAAK;EACjD,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnDK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCkB,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC,CAAC;EAEF,IAAIR,QAAQ,CAACc,EAAE,EAAE;IACf,MAAMT,IAAI,GAAG,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,OAAOG,IAAI;EACb,CAAC,MAAM;IACL,MAAM,IAAIU,KAAK,CAAC,gBAAgB,CAAC;EACnC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}